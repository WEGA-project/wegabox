// Функция преобразования чисел с плавающей запятой в текст с округлением
String fFTS(float x, byte precision) {
  char tmp[50];
  dtostrf(x, 0, precision, tmp);
  return String(tmp);
}



// Функция прямого опроса ультразвукового датчика
float us(int trg, int ech, float temp, long cnt) {
  long count=0;
  long SumMicros=0;
  long StartMicros=0;
  long EndMicros=0;
  long LengthImpulse=0;

  pinMode(trg, OUTPUT );
  pinMode(ech, INPUT);

 while (count < cnt) {
  count++;
    
    digitalWrite(trg,1);    // Отправляем импульс
    delayMicroseconds(10);  
    digitalWrite(trg,0);
    

    long z=0;
    while (digitalRead(ech) == 1 and z<20000) {  // Ловим приход эха
     z++; 
      if (z<19999)  // Если эхо вернулось считаем его длинну или  выходим из функции если ответ не услышан
      {
        StartMicros=micros();  // Засекаем время старта
        while ( digitalRead(ech) == 1 ) // Ждем пока эхо не закончится
        EndMicros=micros(); // засекаем время окончания
         
        LengthImpulse=EndMicros-StartMicros; // Считаем длинну эха 
        delay (5);
        
        break; // Выходим из цикла
      }
      else{
        return -1;
      }
    }
     
    SumMicros=LengthImpulse + SumMicros; // Суммируем время всех проходов
    
    //SumMicros=Dstkalman.filtered( LengthImpulse); // Суммируем время всех проходов
    //SumMicros=DstAverage.filtered( DstMediana.filtered(LengthImpulse)); // Суммируем время всех проходов
  }
   float vSound=20.046796*sqrt(273.15+temp);
 return (vSound/10000)*((float(SumMicros)/count)/2);
 //return (vSound/10000)*((float(SumMicros))/2);
}

